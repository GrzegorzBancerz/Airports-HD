<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/30/2019 10:24:30 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="TOMASZ-PC"
  DTS:CreatorName="TOMASZ-PC\Tomasz"
  DTS:DTSID="{C286DE5E-05DB-4922-92C9-C30B4EC01445}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1100.123"
  DTS:LocaleID="1045"
  DTS:ObjectName="DimDate"
  DTS:PackageType="5"
  DTS:VersionBuild="1"
  DTS:VersionGUID="{C7899B36-2E85-48B8-B677-22E036CDBE75}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{869861D7-5EAA-4725-9204-812C059E444D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{70F14BAE-DCDE-4C28-A732-FD00719FB49A}"
          SQLTask:SqlStatementSource="DECLARE @StartDate DATE = '20080101', @NumberOfYears INT = 1;&#xA;&#xA;-- prevent set or regional settings from interfering with &#xA;-- interpretation of dates / literals&#xA;&#xA;SET DATEFIRST 1;&#xA;SET DATEFORMAT dmy;&#xA;SET LANGUAGE us_english;&#xA;&#xA;DECLARE @CutoffDate DATE = DATEADD(YEAR, @NumberOfYears, @StartDate);&#xA;&#xA;-- this is just a holding table for intermediate calculations:&#xA;&#xA;CREATE TABLE #dim&#xA;(&#xA;  [date]       DATE PRIMARY KEY,&#xA;  [year]       AS DATEPART(YEAR,     [date]),&#xA;  [month]      AS DATEPART(MONTH,    [date]),&#xA;  [FirstOfMonth] AS CONVERT(DATE, DATEADD(MONTH, DATEDIFF(MONTH, 0, [date]), 0)),&#xA;  [monthName]  AS DATENAME(MONTH,    [date]),&#xA;  [dayOfMonth]  AS DATEPART(DAY,  [date]),&#xA;  [dayOfWeek]  AS DATEPART(WEEKDAY,  [date]),&#xA;  [dayOfWeekName]  AS DATENAME(WEEKDAY,  [date]),&#xA;  [quarter]    AS DATEPART(QUARTER,  [date]),&#xA;);&#xA;&#xA;-- use the catalog views to generate as many rows as we need&#xA;&#xA;INSERT #dim([date]) &#xA;SELECT d&#xA;FROM&#xA;(&#xA;  SELECT d = DATEADD(DAY, rn - 1, @StartDate)&#xA;  FROM &#xA;  (&#xA;    SELECT TOP (DATEDIFF(DAY, @StartDate, @CutoffDate)) &#xA;      rn = ROW_NUMBER() OVER (ORDER BY s1.[object_id])&#xA;    FROM sys.all_objects AS s1&#xA;    CROSS JOIN sys.all_objects AS s2&#xA;    -- on my system this would support &gt; 5 million days&#xA;    ORDER BY s1.[object_id]&#xA;  ) AS x&#xA;) AS y;&#xA;&#xA;INSERT dbo.DimDate WITH (TABLOCKX)&#xA;SELECT&#xA;  [DateID]        = ROW_NUMBER() OVER(ORDER BY [date] ASC),&#xA;  [Date]&#x9;&#x9;= [date],&#xA;  [Year]        = CONVERT(INT, [year]),&#xA;  [Month]       = CONVERT(INT, [month]),&#xA;  [MonthName]   = CONVERT(VARCHAR(255), [MonthName]),&#xA;  [DayOfMonth]  = CONVERT(INT, [dayOfMonth]),&#xA;  [DayOfWeek]  = CONVERT(INT, [dayOfWeek]),&#xA;  [DayOfWeekName]  = CONVERT(VARCHAR(255), [dayOfWeekName]),&#xA;  [Quarter]     = CONVERT(INT, [quarter]),&#xA;  [QuarterName]   = CONVERT(VARCHAR(255), CASE [quarter] WHEN 1 THEN 'First' &#xA;                  WHEN 2 THEN 'Second' WHEN 3 THEN 'Third' WHEN 4 THEN 'Fourth' END),&#xA;  [FirstDayOfMonth]     = FirstOfMonth,&#xA;  [LastDayOfMonth]      = MAX([date]) OVER (PARTITION BY [year], [month]),&#xA;  [FirstDayOfQuarter]   = MIN([date]) OVER (PARTITION BY [year], [quarter]),&#xA;  [LastDayOfQuarter]    = MAX([date]) OVER (PARTITION BY [year], [quarter])&#xA;&#xA;FROM #dim&#xA;OPTION (MAXDOP 1);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Execute SQL Task"
          TopLeft="120,82" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>